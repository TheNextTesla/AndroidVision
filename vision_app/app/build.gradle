import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1' //Updated November 2017
    }
}

dependencies {
    compile "com.android.support:support-v4:27.0.2"
    compile "com.android.support:support-v13:27.0.2"
    compile project(':openCVLibrary310')
    compile 'com.android.support:appcompat-v7:27.0.2'
    compile 'com.android.support:design:27.0.2'
    compile 'org.florescu.android.rangeseekbar:rangeseekbar-library:0.3.0'
}

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 27
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.debug
        }

        sourceSets.main {
            jniLibs.srcDir 'src/main/libs' //set .so files directory to libs
            jni.srcDirs = [] //disable automatic ndk-build call
        }

        // call regular ndk-build(.cmd) script from app directory
        task ndkBuild(type: Exec) {
            if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                //commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath
                //Above Line was Causing Android Studio Build Errors - Replaced with Below
                def ndkDir = android.ndkDirectory.getAbsolutePath()
                commandLine ndkDir + '\\ndk-build.cmd', '-C', file('src/main').absolutePath
            } else {
                def ndkDir = android.ndkDirectory.getAbsolutePath()
                commandLine ndkDir + "/ndk-build", '-C', file('src/main').absolutePath
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file("src/main/debug_keystore.jks")
            storePassword "1234Five"
            keyAlias "debug"
            keyPassword "1234Five"
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
}
